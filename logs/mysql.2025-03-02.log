{"level":"info","message":"[2025/3/2 09:43:14][FAILED QUERY]: INSERT INTO `record`(`created_at`, `updated_at`, `id`, `amount`, `date`, `description`, `type`, `book_id`, `account_id`, `category_id`) VALUES (DEFAULT, DEFAULT, DEFAULT, ?, ?, DEFAULT, ?, ?, ?, ?) -- PARAMETERS: [100.5,\"2025-02-22T16:00:00.000Z\",\"income\",2,1,3]\r\n[2025/3/2 09:43:14][QUERY ERROR]: Error: Data truncated for column 'type' at row 1\r\n"}
{"level":"info","message":"[2025/3/2 09:44:43][FAILED QUERY]: INSERT INTO `record`(`created_at`, `updated_at`, `id`, `amount`, `date`, `description`, `type`, `book_id`, `account_id`, `category_id`) VALUES (DEFAULT, DEFAULT, DEFAULT, ?, ?, DEFAULT, ?, ?, ?, ?) -- PARAMETERS: [100.5,\"2025-02-22T16:00:00.000Z\",\"income\",2,1,3]\r\n[2025/3/2 09:44:43][QUERY ERROR]: Error: Data truncated for column 'type' at row 1\r\n"}
{"level":"info","message":"[2025/3/2 09:52:59][FAILED QUERY]: SELECT `user`.`openid` AS openid FROM `user` `user` WHERE `user`.`openid`=? -- PARAMETERS: [\"ozEP_45AfrT8C3E2r90pyNusRKPo\"]\r\n[2025/3/2 09:52:59][QUERY ERROR]: Error: Table 'mytest.user' doesn't exist\r\n"}
{"level":"info","message":"[2025/3/2 09:54:46][FAILED QUERY]: INSERT INTO `record`(`created_at`, `updated_at`, `id`, `amount`, `date`, `description`, `type`, `book_id`, `account_id`, `category_id`) VALUES (DEFAULT, DEFAULT, DEFAULT, ?, ?, DEFAULT, ?, ?, ?, ?) -- PARAMETERS: [10000,\"2025-02-22T16:00:00.000Z\",\"1\",1,23,1]\r\n[2025/3/2 09:54:46][QUERY ERROR]: Error: Cannot add or update a child row: a foreign key constraint fails (`mytest`.`record`, CONSTRAINT `FK_dbc9ab15f085fdbeba550be3f4f` FOREIGN KEY (`account_id`) REFERENCES `account` (`id`))\r\n"}
{"level":"info","message":"[2025/3/2 09:59:18][FAILED QUERY]: INSERT INTO `record`(`created_at`, `updated_at`, `id`, `amount`, `date`, `description`, `type`, `book_id`, `account_id`, `category_id`) VALUES (DEFAULT, DEFAULT, DEFAULT, ?, ?, DEFAULT, ?, ?, ?, ?) -- PARAMETERS: [10000,\"2025-02-22T16:00:00.000Z\",\"1\",1,23,1]\r\n[2025/3/2 09:59:18][QUERY ERROR]: Error: Cannot add or update a child row: a foreign key constraint fails (`mytest`.`record`, CONSTRAINT `FK_dbc9ab15f085fdbeba550be3f4f` FOREIGN KEY (`account_id`) REFERENCES `account` (`id`))\r\n"}
{"level":"info","message":"[2025/3/2 14:29:23][FAILED QUERY]: SELECT DISTINCT `distinctAlias`.`record_id` AS `ids_record_id`, `distinctAlias`.`record_date`, `distinctAlias`.`record_created_at` FROM (SELECT `record`.`created_at` AS `record_created_at`, `record`.`updated_at` AS `record_updated_at`, `record`.`deleted_at` AS `record_deleted_at`, `record`.`id` AS `record_id`, `record`.`amount` AS `record_amount`, `record`.`date` AS `record_date`, `record`.`description` AS `record_description`, `record`.`type` AS `record_type`, `record`.`book_id` AS `record_book_id`, `record`.`account_id` AS `record_account_id`, `record`.`category_id` AS `record_category_id`, `account`.`created_at` AS `account_created_at`, `account`.`updated_at` AS `account_updated_at`, `account`.`deleted_at` AS `account_deleted_at`, `account`.`id` AS `account_id`, `account`.`name` AS `account_name`, `account`.`icon` AS `account_icon`, `account`.`type` AS `account_type`, `account`.`balance` AS `account_balance`, `account`.`remarks` AS `account_remarks`, `account`.`include_in_total` AS `account_include_in_total`, `account`.`is_system` AS `account_is_system`, `account`.`is_default` AS `account_is_default`, `account`.`system_template_id` AS `account_system_template_id`, `account`.`user_id` AS `account_user_id`, `category`.`created_at` AS `category_created_at`, `category`.`updated_at` AS `category_updated_at`, `category`.`deleted_at` AS `category_deleted_at`, `category`.`id` AS `category_id`, `category`.`name` AS `category_name`, `category`.`icon` AS `category_icon`, `category`.`type` AS `category_type`, `category`.`is_default` AS `category_is_default`, `category`.`user_id` AS `category_user_id` FROM `record` `record` LEFT JOIN `account` `account` ON `account`.`id`=`record`.`account_id` AND (`account`.`deleted_at` IS NULL)  LEFT JOIN `category` `category` ON `category`.`id`=`record`.`category_id` AND (`category`.`deleted_at` IS NULL)  INNER JOIN `book` `book` ON `book`.`id`=`record`.`book_id` AND (`book`.`deleted_at` IS NULL) WHERE ( book.userId = ? ) AND ( `record`.`deleted_at` IS NULL )) `distinctAlias` ORDER BY `distinctAlias`.`record_date` DESC, `distinctAlias`.`record_created_at` DESC, `record_id` ASC LIMIT 10 -- PARAMETERS: [1]\r\n[2025/3/2 14:29:23][QUERY ERROR]: Error: Unknown column 'book.userId' in 'where clause'\r\n"}
{"level":"info","message":"[2025/3/2 14:29:56][FAILED QUERY]: SELECT DISTINCT `distinctAlias`.`record_id` AS `ids_record_id`, `distinctAlias`.`record_date`, `distinctAlias`.`record_created_at` FROM (SELECT `record`.`created_at` AS `record_created_at`, `record`.`updated_at` AS `record_updated_at`, `record`.`deleted_at` AS `record_deleted_at`, `record`.`id` AS `record_id`, `record`.`amount` AS `record_amount`, `record`.`date` AS `record_date`, `record`.`description` AS `record_description`, `record`.`type` AS `record_type`, `record`.`book_id` AS `record_book_id`, `record`.`account_id` AS `record_account_id`, `record`.`category_id` AS `record_category_id`, `account`.`created_at` AS `account_created_at`, `account`.`updated_at` AS `account_updated_at`, `account`.`deleted_at` AS `account_deleted_at`, `account`.`id` AS `account_id`, `account`.`name` AS `account_name`, `account`.`icon` AS `account_icon`, `account`.`type` AS `account_type`, `account`.`balance` AS `account_balance`, `account`.`remarks` AS `account_remarks`, `account`.`include_in_total` AS `account_include_in_total`, `account`.`is_system` AS `account_is_system`, `account`.`is_default` AS `account_is_default`, `account`.`system_template_id` AS `account_system_template_id`, `account`.`user_id` AS `account_user_id`, `category`.`created_at` AS `category_created_at`, `category`.`updated_at` AS `category_updated_at`, `category`.`deleted_at` AS `category_deleted_at`, `category`.`id` AS `category_id`, `category`.`name` AS `category_name`, `category`.`icon` AS `category_icon`, `category`.`type` AS `category_type`, `category`.`is_default` AS `category_is_default`, `category`.`user_id` AS `category_user_id` FROM `record` `record` LEFT JOIN `account` `account` ON `account`.`id`=`record`.`account_id` AND (`account`.`deleted_at` IS NULL)  LEFT JOIN `category` `category` ON `category`.`id`=`record`.`category_id` AND (`category`.`deleted_at` IS NULL)  INNER JOIN `book` `book` ON `book`.`id`=`record`.`book_id` AND (`book`.`deleted_at` IS NULL) WHERE ( book.userId = ? ) AND ( `record`.`deleted_at` IS NULL )) `distinctAlias` ORDER BY `distinctAlias`.`record_date` DESC, `distinctAlias`.`record_created_at` DESC, `record_id` ASC LIMIT 10 -- PARAMETERS: [1]\r\n[2025/3/2 14:29:56][QUERY ERROR]: Error: Unknown column 'book.userId' in 'where clause'\r\n"}
{"level":"info","message":"[2025/3/2 14:30:02][FAILED QUERY]: SELECT DISTINCT `distinctAlias`.`record_id` AS `ids_record_id`, `distinctAlias`.`record_date`, `distinctAlias`.`record_created_at` FROM (SELECT `record`.`created_at` AS `record_created_at`, `record`.`updated_at` AS `record_updated_at`, `record`.`deleted_at` AS `record_deleted_at`, `record`.`id` AS `record_id`, `record`.`amount` AS `record_amount`, `record`.`date` AS `record_date`, `record`.`description` AS `record_description`, `record`.`type` AS `record_type`, `record`.`book_id` AS `record_book_id`, `record`.`account_id` AS `record_account_id`, `record`.`category_id` AS `record_category_id`, `account`.`created_at` AS `account_created_at`, `account`.`updated_at` AS `account_updated_at`, `account`.`deleted_at` AS `account_deleted_at`, `account`.`id` AS `account_id`, `account`.`name` AS `account_name`, `account`.`icon` AS `account_icon`, `account`.`type` AS `account_type`, `account`.`balance` AS `account_balance`, `account`.`remarks` AS `account_remarks`, `account`.`include_in_total` AS `account_include_in_total`, `account`.`is_system` AS `account_is_system`, `account`.`is_default` AS `account_is_default`, `account`.`system_template_id` AS `account_system_template_id`, `account`.`user_id` AS `account_user_id`, `category`.`created_at` AS `category_created_at`, `category`.`updated_at` AS `category_updated_at`, `category`.`deleted_at` AS `category_deleted_at`, `category`.`id` AS `category_id`, `category`.`name` AS `category_name`, `category`.`icon` AS `category_icon`, `category`.`type` AS `category_type`, `category`.`is_default` AS `category_is_default`, `category`.`user_id` AS `category_user_id` FROM `record` `record` LEFT JOIN `account` `account` ON `account`.`id`=`record`.`account_id` AND (`account`.`deleted_at` IS NULL)  LEFT JOIN `category` `category` ON `category`.`id`=`record`.`category_id` AND (`category`.`deleted_at` IS NULL)  INNER JOIN `book` `book` ON `book`.`id`=`record`.`book_id` AND (`book`.`deleted_at` IS NULL) WHERE ( book.userId = ? ) AND ( `record`.`deleted_at` IS NULL )) `distinctAlias` ORDER BY `distinctAlias`.`record_date` DESC, `distinctAlias`.`record_created_at` DESC, `record_id` ASC LIMIT 10 -- PARAMETERS: [1]\r\n[2025/3/2 14:30:02][QUERY ERROR]: Error: Unknown column 'book.userId' in 'where clause'\r\n"}
{"level":"info","message":"[2025/3/2 14:30:35][FAILED QUERY]: SELECT DISTINCT `distinctAlias`.`record_id` AS `ids_record_id`, `distinctAlias`.`record_date`, `distinctAlias`.`record_created_at` FROM (SELECT `record`.`created_at` AS `record_created_at`, `record`.`updated_at` AS `record_updated_at`, `record`.`deleted_at` AS `record_deleted_at`, `record`.`id` AS `record_id`, `record`.`amount` AS `record_amount`, `record`.`date` AS `record_date`, `record`.`description` AS `record_description`, `record`.`type` AS `record_type`, `record`.`book_id` AS `record_book_id`, `record`.`account_id` AS `record_account_id`, `record`.`category_id` AS `record_category_id`, `account`.`created_at` AS `account_created_at`, `account`.`updated_at` AS `account_updated_at`, `account`.`deleted_at` AS `account_deleted_at`, `account`.`id` AS `account_id`, `account`.`name` AS `account_name`, `account`.`icon` AS `account_icon`, `account`.`type` AS `account_type`, `account`.`balance` AS `account_balance`, `account`.`remarks` AS `account_remarks`, `account`.`include_in_total` AS `account_include_in_total`, `account`.`is_system` AS `account_is_system`, `account`.`is_default` AS `account_is_default`, `account`.`system_template_id` AS `account_system_template_id`, `account`.`user_id` AS `account_user_id`, `category`.`created_at` AS `category_created_at`, `category`.`updated_at` AS `category_updated_at`, `category`.`deleted_at` AS `category_deleted_at`, `category`.`id` AS `category_id`, `category`.`name` AS `category_name`, `category`.`icon` AS `category_icon`, `category`.`type` AS `category_type`, `category`.`is_default` AS `category_is_default`, `category`.`user_id` AS `category_user_id` FROM `record` `record` LEFT JOIN `account` `account` ON `account`.`id`=`record`.`account_id` AND (`account`.`deleted_at` IS NULL)  LEFT JOIN `category` `category` ON `category`.`id`=`record`.`category_id` AND (`category`.`deleted_at` IS NULL)  INNER JOIN `book` `book` ON `book`.`id`=`record`.`book_id` AND (`book`.`deleted_at` IS NULL) WHERE ( book.userId = ? ) AND ( `record`.`deleted_at` IS NULL )) `distinctAlias` ORDER BY `distinctAlias`.`record_date` DESC, `distinctAlias`.`record_created_at` DESC, `record_id` ASC LIMIT 10 -- PARAMETERS: [1]\r\n[2025/3/2 14:30:35][QUERY ERROR]: Error: Unknown column 'book.userId' in 'where clause'\r\n"}
{"level":"info","message":"[2025/3/2 21:00:06][FAILED QUERY]: SELECT TO_CHAR(`record`.`date`, 'YYYY-MM-DD') AS group_date, `record`.`id` AS record_id, `record`.`amount` AS record_amount, `record`.`type` AS record_type, `record`.`date` AS record_date, `category`.`name` AS category_name, `category`.`icon` AS category_icon, SUM(CASE WHEN `record`.`type` = 1 THEN `record`.`amount` ELSE 0 END) OVER (PARTITION BY TO_CHAR(`record`.`date`, 'YYYY-MM-DD')) AS total_income, SUM(CASE WHEN `record`.`type` = 2 THEN `record`.`amount` ELSE 0 END) OVER (PARTITION BY TO_CHAR(`record`.`date`, 'YYYY-MM-DD')) AS total_expense FROM `record` `record` INNER JOIN `book` `book` ON `book`.`id`=`record`.`book_id` AND ( `book`.`user_id` = ? AND `book`.`deleted_at` IS NULL)  LEFT JOIN `category` `category` ON `category`.`id`=`record`.`category_id` AND (`category`.`deleted_at` IS NULL) WHERE ( `record`.`date` BETWEEN ? AND ? ) AND ( `record`.`deleted_at` IS NULL ) ORDER BY `record`.`date` DESC -- PARAMETERS: [1,\"2025-02-28T16:00:00.000Z\",\"2025-03-31T15:59:59.000Z\"]\r\n[2025/3/2 21:00:06][QUERY ERROR]: Error: FUNCTION mytest.TO_CHAR does not exist\r\n"}
{"level":"info","message":"[2025/3/2 21:01:24][FAILED QUERY]: SELECT TO_CHAR(`record`.`date`, 'YYYY-MM-DD') AS group_date, `record`.`id` AS record_id, `record`.`amount` AS record_amount, `record`.`type` AS record_type, `record`.`date` AS record_date, `category`.`name` AS category_name, `category`.`icon` AS category_icon, SUM(CASE WHEN `record`.`type` = 1 THEN `record`.`amount` ELSE 0 END) OVER (PARTITION BY TO_CHAR(`record`.`date`, 'YYYY-MM-DD')) AS total_income, SUM(CASE WHEN `record`.`type` = 2 THEN `record`.`amount` ELSE 0 END) OVER (PARTITION BY TO_CHAR(`record`.`date`, 'YYYY-MM-DD')) AS total_expense FROM `record` `record` INNER JOIN `book` `book` ON `book`.`id`=`record`.`book_id` AND ( `book`.`user_id` = ? AND `book`.`deleted_at` IS NULL)  LEFT JOIN `category` `category` ON `category`.`id`=`record`.`category_id` AND (`category`.`deleted_at` IS NULL) WHERE ( `record`.`date` BETWEEN ? AND ? ) AND ( `record`.`deleted_at` IS NULL ) ORDER BY `record`.`date` DESC -- PARAMETERS: [1,\"2025-02-28T16:00:00.000Z\",\"2025-03-31T15:59:59.000Z\"]\r\n[2025/3/2 21:01:24][QUERY ERROR]: Error: FUNCTION mytest.TO_CHAR does not exist\r\n"}
{"level":"info","message":"[2025/3/2 21:06:14][FAILED QUERY]: CREATE INDEX `IDX_7a8c943e9df5ba5f3af9aaf018` ON `record` (`book_id`, `date`, `type`, `book_id`)\r\n[2025/3/2 21:06:14][QUERY ERROR]: Error: Duplicate column name 'book_id'\r\n"}
{"level":"info","message":"[2025/3/2 21:06:17][FAILED QUERY]: CREATE INDEX `IDX_7a8c943e9df5ba5f3af9aaf018` ON `record` (`book_id`, `date`, `type`, `book_id`)\r\n[2025/3/2 21:06:17][QUERY ERROR]: Error: Duplicate column name 'book_id'\r\n"}
{"level":"info","message":"[2025/3/2 21:06:20][FAILED QUERY]: CREATE INDEX `IDX_7a8c943e9df5ba5f3af9aaf018` ON `record` (`book_id`, `date`, `type`, `book_id`)\r\n[2025/3/2 21:06:20][QUERY ERROR]: Error: Duplicate column name 'book_id'\r\n"}
{"level":"info","message":"[2025/3/2 21:06:23][FAILED QUERY]: CREATE INDEX `IDX_7a8c943e9df5ba5f3af9aaf018` ON `record` (`book_id`, `date`, `type`, `book_id`)\r\n[2025/3/2 21:06:23][QUERY ERROR]: Error: Duplicate column name 'book_id'\r\n"}
{"level":"info","message":"[2025/3/2 21:06:26][FAILED QUERY]: CREATE INDEX `IDX_7a8c943e9df5ba5f3af9aaf018` ON `record` (`book_id`, `date`, `type`, `book_id`)\r\n[2025/3/2 21:06:26][QUERY ERROR]: Error: Duplicate column name 'book_id'\r\n"}
{"level":"info","message":"[2025/3/2 21:06:29][FAILED QUERY]: CREATE INDEX `IDX_7a8c943e9df5ba5f3af9aaf018` ON `record` (`book_id`, `date`, `type`, `book_id`)\r\n[2025/3/2 21:06:29][QUERY ERROR]: Error: Duplicate column name 'book_id'\r\n"}
{"level":"info","message":"[2025/3/2 21:06:32][FAILED QUERY]: CREATE INDEX `IDX_7a8c943e9df5ba5f3af9aaf018` ON `record` (`book_id`, `date`, `type`, `book_id`)\r\n[2025/3/2 21:06:32][QUERY ERROR]: Error: Duplicate column name 'book_id'\r\n"}
{"level":"info","message":"[2025/3/2 21:06:35][FAILED QUERY]: CREATE INDEX `IDX_7a8c943e9df5ba5f3af9aaf018` ON `record` (`book_id`, `date`, `type`, `book_id`)\r\n[2025/3/2 21:06:35][QUERY ERROR]: Error: Duplicate column name 'book_id'\r\n"}
{"level":"info","message":"[2025/3/2 21:06:38][FAILED QUERY]: CREATE INDEX `IDX_7a8c943e9df5ba5f3af9aaf018` ON `record` (`book_id`, `date`, `type`, `book_id`)\r\n[2025/3/2 21:06:38][QUERY ERROR]: Error: Duplicate column name 'book_id'\r\n"}
{"level":"info","message":"[2025/3/2 21:06:48][FAILED QUERY]: CREATE INDEX `IDX_7a8c943e9df5ba5f3af9aaf018` ON `record` (`book_id`, `date`, `type`, `book_id`)\r\n[2025/3/2 21:06:48][QUERY ERROR]: Error: Duplicate column name 'book_id'\r\n"}
{"level":"info","message":"[2025/3/2 21:06:51][FAILED QUERY]: CREATE INDEX `IDX_7a8c943e9df5ba5f3af9aaf018` ON `record` (`book_id`, `date`, `type`, `book_id`)\r\n[2025/3/2 21:06:51][QUERY ERROR]: Error: Duplicate column name 'book_id'\r\n"}
